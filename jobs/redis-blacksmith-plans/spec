name: redis-blacksmith-plans
packages: []
templates:
  bin/configure-blacksmith: bin/configure-blacksmith

  config/tls/redis.cert: config/tls/redis.cert
  config/tls/redis.ca:  config/tls/redis.ca
  config/tls/redis.key: config/tls/redis.key

  plans/service.yml:                plans/service.yml

  plans/standalone/manifest.yml:    plans/standalone/manifest.yml
  plans/standalone/credentials.yml: plans/standalone/credentials.yml
  plans/standalone/init:            plans/standalone/init

  plans/cluster/manifest.yml:       plans/cluster/manifest.yml
  plans/cluster/credentials.yml:    plans/cluster/credentials.yml
  plans/cluster/init:               plans/cluster/init

  plans/standalone-6/manifest.yml:    plans/standalone-6/manifest.yml
  plans/standalone-6/credentials.yml: plans/standalone-6/credentials.yml
  plans/standalone-6/init:            plans/standalone-6/init

  plans/cluster-6/manifest.yml:       plans/cluster-6/manifest.yml
  plans/cluster-6/credentials.yml:    plans/cluster-6/credentials.yml
  plans/cluster-6/init:               plans/cluster-6/init

properties:
  environment:
    description: The environment name of the cloudfoundry/bosh deployment

  bosh_env:
    description: The environment name of the bosh deployment if different from cloudfoundry (defaults to environment)

  persistent_disk_type:
    description: BOSH Cloud Config Persistent Disk Type Name (optional)
    default: ""

  service.id:
    description: Machine-friendly name for this service.
    default: redis

  service.name:
    description: Human-friendly name for this service, to be displayed in the Cloud Foundry marketplace.
    default: redis

  service.description:
    description: A description for this service, to be displayed in the Cloud Foundry marketplace.
    default: A dedicated Redis instance, deployed just for you.

  service.tags:
    description: List of tags to apply to service instances.
    default: [blacksmith, dedicated, redis]

  service.limit:
    description: A global limit on the number of Redis services (regardless of the plan); 0 = unlimited.
    default: 0

  service.type:
    description: Type of redis instance, standalone or cluster

  redis.tls.enabled:
    description: "Should the Redis use TLS"
    default: false
  redis.tls.dual-mode:
    description: "Allow for TLS (16379) and Non-TLS (6379) both."
    default: false
  redis.tls.ca:
    description: The PEM-encoded public certificate of the CA
  redis.tls.ca_cert:
    description: The PEM-encoded certificate of the CA for signing
  redis.tls.ca_key:
    description: The PEM-encoded private key for the CA certificate.

  plans:
    description: |
      A map of plans.  I.e.:

        standalone:
          name: Standalone Redis Instance
          description: A single redis server, with no redundancy or replication
          limit: 7
          type: standalone
          vm_type: default

      Configuration keys beyond `name', `description', `limit', and `type' are type-specific.
          limit: 7

      For type=standalone:

        vm_type    What VM type to use for the standalone redis server.
                   Defaults to 'default'
